// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace csharp_portfolio.Migrations
{
    [DbContext(typeof(AccountContext))]
    [Migration("20240419192644_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Account", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EncryptedDataId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ScryptParamsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Username");

                    b.HasIndex("EncryptedDataId");

                    b.HasIndex("ScryptParamsId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("EncryptedData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nonce")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EncryptedData");
                });

            modelBuilder.Entity("ScryptParams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HashLength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParamN")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParamP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParamR")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SaltLength")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ScryptParams");
                });

            modelBuilder.Entity("Account", b =>
                {
                    b.HasOne("EncryptedData", "EncryptedData")
                        .WithMany()
                        .HasForeignKey("EncryptedDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScryptParams", "ScryptParams")
                        .WithMany()
                        .HasForeignKey("ScryptParamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EncryptedData");

                    b.Navigation("ScryptParams");
                });
#pragma warning restore 612, 618
        }
    }
}
